"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7455],{6553:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>d,default:()=>o,frontMatter:()=>c,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"api/classes/PanelMesh","title":"Class: PanelMesh","description":"Defined in14","source":"@site/docs/api/classes/PanelMesh.md","sourceDirName":"api/classes","slug":"/api/classes/PanelMesh","permalink":"/docs/api/classes/PanelMesh","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"Panel","permalink":"/docs/api/classes/Panel"},"next":{"title":"Physics","permalink":"/docs/api/classes/Physics"}}');var i=n(4848),l=n(8453);const c={},d="Class: PanelMesh",t={},h=[{value:"Extends",id:"extends",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"shader",id:"shader",level:5},{value:"backgroundColor?",id:"backgroundcolor",level:5},{value:"panelScale?",id:"panelscale",level:5},{value:"Returns",id:"returns",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Properties",id:"properties",level:2},{value:"name",id:"name",level:3},{value:"Overrides",id:"overrides-1",level:4},{value:"Accessors",id:"accessors",level:2},{value:"uniforms",id:"uniforms",level:3},{value:"Get Signature",id:"get-signature",level:4},{value:"Returns",id:"returns-1",level:5},{value:"Methods",id:"methods",level:2},{value:"setAspectRatio()",id:"setaspectratio",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"aspectRatio",id:"aspectratio",level:5},{value:"Returns",id:"returns-2",level:4},{value:"setWidthHeight()",id:"setwidthheight",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"width",id:"width",level:5},{value:"height",id:"height",level:5},{value:"Returns",id:"returns-3",level:4}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"class-panelmesh",children:"Class: PanelMesh"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/ui/core/PanelMesh.ts#L14",children:"src/ui/core/PanelMesh.ts:14"})]}),"\n",(0,i.jsxs)(s.p,{children:["A specialized ",(0,i.jsx)(s.code,{children:"THREE.Mesh"})," designed for rendering UI panel\nbackgrounds. It utilizes a custom shader to draw rounded rectangles\n(squircles) and provides methods to dynamically update its appearance,\nsuch as aspect ratio and size. This class is a core building block for\n",(0,i.jsx)(s.code,{children:"Panel"})," components."]}),"\n",(0,i.jsx)(s.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"https://threejs.org/docs/#api/en/objects/Mesh",children:(0,i.jsx)(s.code,{children:"Mesh"})}),"<",(0,i.jsx)(s.a,{href:"https://threejs.org/docs/#api/en/geometries/PlaneGeometry",children:(0,i.jsx)(s.code,{children:"THREE.PlaneGeometry"})}),", ",(0,i.jsx)(s.a,{href:"https://threejs.org/docs/#api/en/materials/ShaderMaterial",children:(0,i.jsx)(s.code,{children:"THREE.ShaderMaterial"})}),">"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(s.h3,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"new PanelMesh"}),"(",(0,i.jsx)(s.code,{children:"shader"}),", ",(0,i.jsx)(s.code,{children:"backgroundColor?"}),", ",(0,i.jsx)(s.code,{children:"panelScale?"}),"): ",(0,i.jsx)(s.code,{children:"PanelMesh"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/ui/core/PanelMesh.ts#L33",children:"src/ui/core/PanelMesh.ts:33"})]}),"\n",(0,i.jsx)(s.p,{children:"Creates an instance of PanelMesh."}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"shader",children:"shader"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/api/interfaces/Shader",children:(0,i.jsx)(s.code,{children:"Shader"})})}),"\n",(0,i.jsx)(s.p,{children:"Shader for the panel mesh."}),"\n",(0,i.jsx)(s.h5,{id:"backgroundcolor",children:"backgroundColor?"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.p,{children:"The background color as a CSS string."}),"\n",(0,i.jsx)(s.h5,{id:"panelscale",children:"panelScale?"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," = ",(0,i.jsx)(s.code,{children:"1.0"})]}),"\n",(0,i.jsx)(s.p,{children:"The initial scale of the plane"}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"PanelMesh"})}),"\n",(0,i.jsx)(s.h4,{id:"overrides",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"THREE.Mesh<THREE.PlaneGeometry, THREE.ShaderMaterial>.constructor"})}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"name",children:"name"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"name"}),": ",(0,i.jsx)(s.code,{children:"string"})," = ",(0,i.jsx)(s.code,{children:"'PanelMesh'"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/ui/core/PanelMesh.ts#L17",children:"src/ui/core/PanelMesh.ts:17"})]}),"\n",(0,i.jsx)(s.p,{children:"Text description of the PanelMesh"}),"\n",(0,i.jsx)(s.h4,{id:"overrides-1",children:"Overrides"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"THREE.Mesh.name"})}),"\n",(0,i.jsx)(s.h2,{id:"accessors",children:"Accessors"}),"\n",(0,i.jsx)(s.h3,{id:"uniforms",children:"uniforms"}),"\n",(0,i.jsx)(s.h4,{id:"get-signature",children:"Get Signature"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"get"})," ",(0,i.jsx)(s.strong,{children:"uniforms"}),"(): ",(0,i.jsx)(s.code,{children:"object"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/ui/core/PanelMesh.ts#L23",children:"src/ui/core/PanelMesh.ts:23"})]}),"\n",(0,i.jsx)(s.p,{children:"Provides convenient access to the material's shader uniforms."}),"\n",(0,i.jsx)(s.h5,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"object"})}),"\n",(0,i.jsx)(s.p,{children:"The uniforms object of the shader material."}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"setaspectratio",children:"setAspectRatio()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"setAspectRatio"}),"(",(0,i.jsx)(s.code,{children:"aspectRatio"}),"): ",(0,i.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/ui/core/PanelMesh.ts#L71",children:"src/ui/core/PanelMesh.ts:71"})]}),"\n",(0,i.jsx)(s.p,{children:"Adjusts the mesh's scale to match a given aspect ratio, preventing the\npanel from appearing stretched."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"aspectratio",children:"aspectRatio"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"number"})}),"\n",(0,i.jsx)(s.p,{children:"The desired width-to-height ratio."}),"\n",(0,i.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"setwidthheight",children:"setWidthHeight()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"setWidthHeight"}),"(",(0,i.jsx)(s.code,{children:"width"}),", ",(0,i.jsx)(s.code,{children:"height"}),"): ",(0,i.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/ui/core/PanelMesh.ts#L62",children:"src/ui/core/PanelMesh.ts:62"})]}),"\n",(0,i.jsx)(s.p,{children:"Sets the panel's absolute dimensions (width and height) in the shader.\nThis is used by the shader to correctly calculate properties like rounded\ncorner radii."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"width",children:"width"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"number"})}),"\n",(0,i.jsx)(s.p,{children:"The width of the panel."}),"\n",(0,i.jsx)(s.h5,{id:"height",children:"height"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"number"})}),"\n",(0,i.jsx)(s.p,{children:"The height of the panel."}),"\n",(0,i.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})})]})}function o(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>d});var r=n(6540);const i={},l=r.createContext(i);function c(e){const s=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);