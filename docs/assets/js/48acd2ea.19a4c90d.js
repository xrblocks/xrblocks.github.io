"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9767],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(96540);const r={},o=s.createContext(r);function l(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(o.Provider,{value:n},e.children)}},69119:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"manual/Inputs","title":"Inputs","description":"Input","source":"@site/docs/manual/Inputs.md","sourceDirName":"manual","slug":"/manual/Inputs","permalink":"/docs/manual/Inputs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Core","permalink":"/docs/manual/Core"},"next":{"title":"Depth","permalink":"/docs/manual/Depth"}}');var r=t(74848),o=t(28453);const l={sidebar_position:4},c=void 0,i={},a=[{value:"Input",id:"input",level:2},{value:"Controllers",id:"controllers",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"input",children:"Input"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/api/classes/Input",children:(0,r.jsx)(n.code,{children:"Input"})})," object available at ",(0,r.jsx)(n.code,{children:"xb.core.input"})," provides access to controllers and raycasting results.\nIntersection results can be queries using the ",(0,r.jsx)(n.a,{href:"/api/classes/Input#intersectionsforcontroller",children:(0,r.jsx)(n.code,{children:"intersectionsForController"})})," property which maps controllers to raycast results.\nRaycast results are automatically updated when the controller begins selecting."]}),"\n",(0,r.jsx)(n.p,{children:"For example, to detect which item is selected:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'export class ItemSelectionScript extends xb.Script {\n  onSelectStart(event) {\n    const controller = event.target;\n    const intersections = xb.core.input.intersectionsForController(controller);\n    if (intersections.length > 0) {\n        console.log("Item selected:", intersections[0].object);\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["When a controller begins selecting, XRInput also sets ",(0,r.jsx)(n.code,{children:"controller.userData.selected"})," to ",(0,r.jsx)(n.code,{children:"true"}),".\nThis can be used to loop over controllers which are selecting.\nFor example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"export class ItemSelectionScript extends xb.Script {\n  update() {\n    const controllers = xb.core.input.controllers;\n    for (const controller of controllers) {\n      if (controller.userData.selected) {\n          handleController(controller);\n      }\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"controllers",children:"Controllers"}),"\n",(0,r.jsx)(n.p,{children:"XR Blocks currently includes the following controllers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API/Inputs",children:"WebXR input sources"})," - this includes hand and controllers in Android XR."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/api/classes/MouseController",children:(0,r.jsx)(n.code,{children:"MouseController"})})," - this becomes enabled in the simulator when User Mode is active."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/api/classes/GazeController",children:(0,r.jsx)(n.code,{children:"GazeController"})})," - this controller represents the center of the screen in Android XR."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);