"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5344],{7954:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"api/classes/Registry","title":"Class: Registry","description":"Defined in3","source":"@site/docs/api/classes/Registry.md","sourceDirName":"api/classes","slug":"/api/classes/Registry","permalink":"/api/classes/Registry","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"PlanesOptions","permalink":"/api/classes/PlanesOptions"},"next":{"title":"Reticle","permalink":"/api/classes/Reticle"}}');var t=r(4848),i=r(8453);const c={},l="Class: Registry",d={},o=[{value:"Constructors",id:"constructors",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"get()",id:"get",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"T",id:"t",level:5},{value:"Parameters",id:"parameters",level:4},{value:"type",id:"type",level:5},{value:"Returns",id:"returns-1",level:4},{value:"getOrCreate()",id:"getorcreate",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"T",id:"t-1",level:5},{value:"Parameters",id:"parameters-1",level:4},{value:"type",id:"type-1",level:5},{value:"factory",id:"factory",level:5},{value:"Returns",id:"returns-2",level:4},{value:"register()",id:"register",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"T",id:"t-2",level:5},{value:"Parameters",id:"parameters-2",level:4},{value:"instance",id:"instance",level:5},{value:"type?",id:"type-2",level:5},{value:"Returns",id:"returns-3",level:4},{value:"unregister()",id:"unregister",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"type",id:"type-3",level:5},{value:"Returns",id:"returns-4",level:4}];function h(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"class-registry",children:"Class: Registry"})}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/core/components/Registry.ts#L3",children:"src/core/components/Registry.ts:3"})]}),"\n",(0,t.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(s.h3,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"new Registry"}),"(): ",(0,t.jsx)(s.code,{children:"Registry"})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"Registry"})}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"get",children:"get()"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"get"}),"<",(0,t.jsx)(s.code,{children:"T"}),">(",(0,t.jsx)(s.code,{children:"type"}),"): ",(0,t.jsx)(s.code,{children:"undefined"})," | ",(0,t.jsx)(s.code,{children:"T"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/core/components/Registry.ts#L31",children:"src/core/components/Registry.ts:31"})]}),"\n",(0,t.jsx)(s.p,{children:"Gets an existing instance of a registered type."}),"\n",(0,t.jsx)(s.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"t",children:"T"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"T"})," ",(0,t.jsx)(s.em,{children:"extends"})," ",(0,t.jsx)(s.code,{children:"object"})]}),"\n",(0,t.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"type",children:"type"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/api/type-aliases/Constructor",children:(0,t.jsx)(s.code,{children:"Constructor"})}),"<",(0,t.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(s.p,{children:"The constructor function of the type to retrieve."}),"\n",(0,t.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"undefined"})," | ",(0,t.jsx)(s.code,{children:"T"})]}),"\n",(0,t.jsx)(s.p,{children:"The instance of the requested type."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"getorcreate",children:"getOrCreate()"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"getOrCreate"}),"<",(0,t.jsx)(s.code,{children:"T"}),">(",(0,t.jsx)(s.code,{children:"type"}),", ",(0,t.jsx)(s.code,{children:"factory"}),"): ",(0,t.jsx)(s.code,{children:"T"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/core/components/Registry.ts#L43",children:"src/core/components/Registry.ts:43"})]}),"\n",(0,t.jsx)(s.p,{children:"Gets an existing instance of a registered type, or creates a new one if it\ndoesn't exist."}),"\n",(0,t.jsx)(s.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"t-1",children:"T"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"T"})," ",(0,t.jsx)(s.em,{children:"extends"})," ",(0,t.jsx)(s.code,{children:"object"})]}),"\n",(0,t.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"type-1",children:"type"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/api/type-aliases/Constructor",children:(0,t.jsx)(s.code,{children:"Constructor"})}),"<",(0,t.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,t.jsx)(s.p,{children:"The constructor function of the type to retrieve."}),"\n",(0,t.jsx)(s.h5,{id:"factory",children:"factory"}),"\n",(0,t.jsxs)(s.p,{children:["() => ",(0,t.jsx)(s.code,{children:"T"})]}),"\n",(0,t.jsx)(s.p,{children:"A function that creates a new instance of the type if it\ndoesn't already exist."}),"\n",(0,t.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"T"})}),"\n",(0,t.jsx)(s.p,{children:"The instance of the requested type."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"register",children:"register()"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"register"}),"<",(0,t.jsx)(s.code,{children:"T"}),">(",(0,t.jsx)(s.code,{children:"instance"}),", ",(0,t.jsx)(s.code,{children:"type?"}),"): ",(0,t.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/core/components/Registry.ts#L14",children:"src/core/components/Registry.ts:14"})]}),"\n",(0,t.jsx)(s.p,{children:"Registers an new instanceof a given type.\nIf an existing instance of the same type is already registered, it will be\noverwritten."}),"\n",(0,t.jsx)(s.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"t-2",children:"T"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"T"})," ",(0,t.jsx)(s.em,{children:"extends"})," ",(0,t.jsx)(s.code,{children:"object"})]}),"\n",(0,t.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"instance",children:"instance"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"T"})}),"\n",(0,t.jsx)(s.p,{children:"The instance to register."}),"\n",(0,t.jsx)(s.h5,{id:"type-2",children:"type?"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/api/type-aliases/Constructor",children:(0,t.jsx)(s.code,{children:"Constructor"})}),"<",(0,t.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,t.jsxs)(s.p,{children:["Type to register the instance as. Will default to\n",(0,t.jsx)(s.code,{children:"instance.constructor"})," if not defined."]}),"\n",(0,t.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"void"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"unregister",children:"unregister()"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"unregister"}),"(",(0,t.jsx)(s.code,{children:"type"}),"): ",(0,t.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/core/components/Registry.ts#L62",children:"src/core/components/Registry.ts:62"})]}),"\n",(0,t.jsx)(s.p,{children:"Unregisters an instance of a given type."}),"\n",(0,t.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"type-3",children:"type"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"/api/type-aliases/Constructor",children:(0,t.jsx)(s.code,{children:"Constructor"})})}),"\n",(0,t.jsx)(s.p,{children:"The type to unregister."}),"\n",(0,t.jsx)(s.h4,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"void"})})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>l});var n=r(6540);const t={},i=n.createContext(t);function c(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);