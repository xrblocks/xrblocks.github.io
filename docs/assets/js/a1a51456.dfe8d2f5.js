"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6995],{28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var d=o(96540);const a={},l=d.createContext(a);function s(e){const n=d.useContext(l);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),d.createElement(l.Provider,{value:n},e.children)}},41005:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>i});const d=JSON.parse('{"id":"manual/ModelViewer","title":"Model Viewer","description":"The ModelViewer class provides a convenient way to display 3D models in the scene and provide standard interactions for moving, rotating, and scaling the 3D model similar to ARCore Scene Viewer.","source":"@site/docs/manual/ModelViewer.md","sourceDirName":"manual","slug":"/manual/ModelViewer","permalink":"/docs/manual/ModelViewer","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"title":"Model Viewer"},"sidebar":"tutorialSidebar","previous":{"title":"Simulator","permalink":"/docs/manual/Simulator"},"next":{"title":"Drag Manager","permalink":"/docs/manual/DragManager"}}');var a=o(74848),l=o(28453);const s={sidebar_position:10,title:"Model Viewer"},r=void 0,t={},i=[{value:"Usage",id:"usage",level:2},{value:"Loading a GLTF Model",id:"loading-a-gltf-model",level:3},{value:"Adding an existing Object3D",id:"adding-an-existing-object3d",level:3},{value:"Sample",id:"sample",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"/api/classes/ModelViewer",children:(0,a.jsx)(n.code,{children:"ModelViewer"})})," class provides a convenient way to display 3D models in the scene and provide standard interactions for moving, rotating, and scaling the 3D model similar to ",(0,a.jsx)(n.a,{href:"https://developers.google.com/ar/develop/scene-viewer",children:"ARCore Scene Viewer"}),".\nSee ",(0,a.jsx)(n.a,{href:"/docs/manual/DragManager",children:(0,a.jsx)(n.code,{children:"DragManager"})})," for details about these interactions."]}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(n.p,{children:["Model Viewer can be used with a GLTF model file or an existing ",(0,a.jsx)(n.a,{href:"https://threejs.org/docs/#api/en/core/Object3D",children:(0,a.jsx)(n.code,{children:"THREE.Object3D"})})," object."]}),"\n",(0,a.jsx)(n.h3,{id:"loading-a-gltf-model",children:"Loading a GLTF Model"}),"\n",(0,a.jsxs)(n.p,{children:["To load a GLTF model, call ",(0,a.jsx)(n.code,{children:"loadGLTFModel"})," with a options object providing the path of the model and the model file name.\nInternally, this will load the GLTF model using ",(0,a.jsx)(n.a,{href:"https://threejs.org/docs/#examples/en/loaders/GLTFLoader",children:(0,a.jsx)(n.code,{children:"GLTFLoader"})})," with ",(0,a.jsx)(n.a,{href:"https://threejs.org/docs/#examples/en/loaders/DRACOLoader",children:(0,a.jsx)(n.code,{children:"DracoLoader"})})," and ",(0,a.jsx)(n.a,{href:"https://threejs.org/docs/#examples/en/loaders/KTX2Loader",children:(0,a.jsx)(n.code,{children:"KTX2Loader"})})," addons."]}),"\n",(0,a.jsxs)(n.p,{children:["Once loaded, the model viewer will have a ",(0,a.jsx)(n.code,{children:"gltf"})," property and add the ",(0,a.jsx)(n.code,{children:"gltf.scene"})," as a child."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'const model = new ModelViewer({});\nmodel.loadGLTFModel({\n  data: {\n    scale: { x: 0.015, y: 0.015, z: 0.015 },\n    path: "./",\n    model: "chess_compressed.glb",\n  },\n  renderer: xb.core.renderer,\n});\n'})}),"\n",(0,a.jsx)(n.h3,{id:"adding-an-existing-object3d",children:"Adding an existing Object3D"}),"\n",(0,a.jsxs)(n.p,{children:["If you have an existing loaded ",(0,a.jsx)(n.code,{children:"THREE.Object3D"})," object, it can be added as a child of the ",(0,a.jsx)(n.code,{children:"ModelViewer"})," object.\nIn this case, the model viewer will require some setup to make it interactable.\nAfter adding the object or objects, please call ",(0,a.jsx)(n.code,{children:"setupBoundingBox"}),".\nThen call ",(0,a.jsx)(n.code,{children:"setupRaycastCylinder"})," or ",(0,a.jsx)(n.code,{children:"setupRaycastBox"})," to enable raycasting to the ModelViewer and ",(0,a.jsx)(n.code,{children:"setupPlatform"})," to add a platform below the model."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const model = new ModelViewer({});\nmodel.add(\n  new THREE.Mesh(\n    new THREE.CylinderGeometry(0.15, 0.15, 0.4),\n    new THREE.MeshPhongMaterial({ color: 0xdb5461 })\n  )\n);\nmodel.setupBoundingBox();\nmodel.setupRaycastCylinder();\nmodel.setupPlatform();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"sample",children:"Sample"}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"/samples/ModelViewer",children:(0,a.jsx)(n.code,{children:"samples/modelviewer/"})})," for a sample of model viewer with both a GLTF model and a loaded three.js object."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);