"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3575],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(96540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},36375:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api/functions/parseBase64DataURL","title":"Function: parseBase64DataURL()","description":"parseBase64DataURL(dataURL) string; strippedBase64 null; strippedBase64: string; \\\\}","source":"@site/docs/api/functions/parseBase64DataURL.md","sourceDirName":"api/functions","slug":"/api/functions/parseBase64DataURL","permalink":"/docs/api/functions/parseBase64DataURL","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"onDesktopUserAgent","permalink":"/docs/api/functions/onDesktopUserAgent"},"next":{"title":"placeObjectAtIntersectionFacingTarget","permalink":"/docs/api/functions/placeObjectAtIntersectionFacingTarget"}}');var r=s(74848),a=s(28453);const i={},c="Function: parseBase64DataURL()",d={},o=[{value:"Parameters",id:"parameters",level:2},{value:"dataURL",id:"dataurl",level:3},{value:"Returns",id:"returns",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"function-parsebase64dataurl",children:"Function: parseBase64DataURL()"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"parseBase64DataURL"}),"(",(0,r.jsx)(n.code,{children:"dataURL"}),"): { ",(0,r.jsx)(n.code,{children:"mimeType"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; ",(0,r.jsx)(n.code,{children:"strippedBase64"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; } | { ",(0,r.jsx)(n.code,{children:"mimeType"}),": ",(0,r.jsx)(n.code,{children:"null"}),"; ",(0,r.jsx)(n.code,{children:"strippedBase64"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; }"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Defined in: ",(0,r.jsx)(n.a,{href:"https://github.com/google/xrblocks/blob/main/src/utils/utils.ts#L176",children:"src/utils/utils.ts:176"})]}),"\n",(0,r.jsx)(n.p,{children:'Parses a data URL (e.g., "data:image/png;base64,...") into its\nstripped base64 string and MIME type.\nThis function handles common image MIME types.'}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"dataurl",children:"dataURL"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})}),"\n",(0,r.jsx)(n.p,{children:"The data URL string."}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:["{ ",(0,r.jsx)(n.code,{children:"mimeType"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; ",(0,r.jsx)(n.code,{children:"strippedBase64"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; } | { ",(0,r.jsx)(n.code,{children:"mimeType"}),": ",(0,r.jsx)(n.code,{children:"null"}),"; ",(0,r.jsx)(n.code,{children:"strippedBase64"}),": ",(0,r.jsx)(n.code,{children:"string"}),"; }"]}),"\n",(0,r.jsx)(n.p,{children:"An object containing the stripped base64 string and the extracted\nMIME type."})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);