"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6369],{7374:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});const c=JSON.parse('{"id":"api/classes/OcclusionUtils","title":"Class: OcclusionUtils","description":"Defined in4","source":"@site/docs/api/classes/OcclusionUtils.md","sourceDirName":"api/classes","slug":"/api/classes/OcclusionUtils","permalink":"/docs/api/classes/OcclusionUtils","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"OcclusionPass","permalink":"/docs/api/classes/OcclusionPass"},"next":{"title":"OpenAI","permalink":"/docs/api/classes/OpenAI"}}');var i=n(4848),r=n(8453);const t={},l="Class: OcclusionUtils",o={},d=[{value:"Constructors",id:"constructors",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"addOcclusionToShader()",id:"addocclusiontoshader",level:3},{value:"Parameters",id:"parameters",level:4},{value:"shader",id:"shader",level:5},{value:"Returns",id:"returns-1",level:4},{value:"createOcclusionMapOverrideMaterial()",id:"createocclusionmapoverridematerial",level:3},{value:"Returns",id:"returns-2",level:4}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"class-occlusionutils",children:"Class: OcclusionUtils"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/depth/occlusion/OcclusionUtils.ts#L4",children:"src/depth/occlusion/OcclusionUtils.ts:4"})]}),"\n",(0,i.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(s.h3,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"new OcclusionUtils"}),"(): ",(0,i.jsx)(s.code,{children:"OcclusionUtils"})]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"OcclusionUtils"})}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"addocclusiontoshader",children:"addOcclusionToShader()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"static"})," ",(0,i.jsx)(s.strong,{children:"addOcclusionToShader"}),"(",(0,i.jsx)(s.code,{children:"shader"}),"): ",(0,i.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/depth/occlusion/OcclusionUtils.ts#L21",children:"src/depth/occlusion/OcclusionUtils.ts:21"})]}),"\n",(0,i.jsxs)(s.p,{children:["Modifies a material's shader in-place to incorporate distance-based\nalpha occlusion. This is designed to be used with a material's\n",(0,i.jsx)(s.code,{children:"onBeforeCompile"})," property. This only works with built-in three.js\nmaterials."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"shader",children:"shader"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/docs/api/interfaces/Shader",children:(0,i.jsx)(s.code,{children:"Shader"})})}),"\n",(0,i.jsx)(s.p,{children:"The shader object provided by onBeforeCompile."}),"\n",(0,i.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"createocclusionmapoverridematerial",children:"createOcclusionMapOverrideMaterial()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"static"})," ",(0,i.jsx)(s.strong,{children:"createOcclusionMapOverrideMaterial"}),"(): ",(0,i.jsx)(s.a,{href:"https://threejs.org/docs/#api/en/materials/MeshBasicMaterial",children:(0,i.jsx)(s.code,{children:"MeshBasicMaterial"})})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/google/xrblocks/blob/main/src/depth/occlusion/OcclusionUtils.ts#L10",children:"src/depth/occlusion/OcclusionUtils.ts:10"})]}),"\n",(0,i.jsxs)(s.p,{children:["Creates a simple material used for rendering objects into the occlusion\nmap. This material is intended to be used with ",(0,i.jsx)(s.code,{children:"renderer.overrideMaterial"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"https://threejs.org/docs/#api/en/materials/MeshBasicMaterial",children:(0,i.jsx)(s.code,{children:"MeshBasicMaterial"})})}),"\n",(0,i.jsx)(s.p,{children:"A new instance of THREE.MeshBasicMaterial."})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var c=n(6540);const i={},r=c.createContext(i);function t(e){const s=c.useContext(r);return c.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),c.createElement(r.Provider,{value:s},e.children)}}}]);