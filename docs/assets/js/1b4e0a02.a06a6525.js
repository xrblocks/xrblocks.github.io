"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1172],{8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var t=n(6540);const i={},o=t.createContext(i);function s(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:r},e.children)}},9624:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/functions/transformRgbUvToWorld","title":"Function: transformRgbUvToWorld()","description":"transformRgbUvToWorld(rgbUv, depthArray, viewProjectionMatrix, matrixWorld, xrDeviceCamera?, xrDepth?): null \\\\| Vector3","source":"@site/docs/api/functions/transformRgbUvToWorld.md","sourceDirName":"api/functions","slug":"/api/functions/transformRgbUvToWorld","permalink":"/docs/api/functions/transformRgbUvToWorld","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"transformRgbToDepthUv","permalink":"/docs/api/functions/transformRgbToDepthUv"},"next":{"title":"traverseUtil","permalink":"/docs/api/functions/traverseUtil"}}');var i=n(4848),o=n(8453);const s={},c="Function: transformRgbUvToWorld()",a={},d=[{value:"Parameters",id:"parameters",level:2},{value:"rgbUv",id:"rgbuv",level:3},{value:"u",id:"u",level:4},{value:"v",id:"v",level:4},{value:"depthArray",id:"deptharray",level:3},{value:"viewProjectionMatrix",id:"viewprojectionmatrix",level:3},{value:"matrixWorld",id:"matrixworld",level:3},{value:"xrDeviceCamera?",id:"xrdevicecamera",level:3},{value:"xrDepth?",id:"xrdepth",level:3},{value:"Returns",id:"returns",level:2}];function l(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"function-transformrgbuvtoworld",children:"Function: transformRgbUvToWorld()"})}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"transformRgbUvToWorld"}),"(",(0,i.jsx)(r.code,{children:"rgbUv"}),", ",(0,i.jsx)(r.code,{children:"depthArray"}),", ",(0,i.jsx)(r.code,{children:"viewProjectionMatrix"}),", ",(0,i.jsx)(r.code,{children:"matrixWorld"}),", ",(0,i.jsx)(r.code,{children:"xrDeviceCamera?"}),", ",(0,i.jsx)(r.code,{children:"xrDepth?"}),"): ",(0,i.jsx)(r.code,{children:"null"})," | ",(0,i.jsx)(r.a,{href:"https://threejs.org/docs/#api/en/math/Vector3",children:(0,i.jsx)(r.code,{children:"Vector3"})})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Defined in: ",(0,i.jsx)(r.a,{href:"https://github.com/google/xrblocks/blob/main/src/camera/CameraUtils.ts#L138",children:"src/camera/CameraUtils.ts:138"})]}),"\n",(0,i.jsx)(r.p,{children:"Retrieves the world space position of a given RGB UV coordinate.\nNote: it is essential that the coordinates, depth array, and projection\nmatrix all correspond to the same view ID (e.g., 0 for left). It is also\nadvised that all of these are obtained at the same time."}),"\n",(0,i.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(r.h3,{id:"rgbuv",children:"rgbUv"}),"\n",(0,i.jsx)(r.p,{children:"The RGB UV coordinate, e.g., { u: 0.5, v: 0.5 }."}),"\n",(0,i.jsx)(r.h4,{id:"u",children:"u"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"number"})}),"\n",(0,i.jsx)(r.h4,{id:"v",children:"v"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"number"})}),"\n",(0,i.jsx)(r.h3,{id:"deptharray",children:"depthArray"}),"\n",(0,i.jsx)(r.p,{children:"Array containing depth data."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"number"}),"[] | ",(0,i.jsx)(r.a,{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",children:(0,i.jsx)(r.code,{children:"Uint16Array"})}),"<",(0,i.jsx)(r.code,{children:"ArrayBufferLike"}),"> | ",(0,i.jsx)(r.a,{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",children:(0,i.jsx)(r.code,{children:"Float32Array"})}),"<",(0,i.jsx)(r.code,{children:"ArrayBufferLike"}),">"]}),"\n",(0,i.jsx)(r.h3,{id:"viewprojectionmatrix",children:"viewProjectionMatrix"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://threejs.org/docs/#api/en/math/Matrix4",children:(0,i.jsx)(r.code,{children:"Matrix4"})})}),"\n",(0,i.jsx)(r.p,{children:"XRView object with corresponding\nprojection matrix."}),"\n",(0,i.jsx)(r.h3,{id:"matrixworld",children:"matrixWorld"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://threejs.org/docs/#api/en/math/Matrix4",children:(0,i.jsx)(r.code,{children:"Matrix4"})})}),"\n",(0,i.jsx)(r.p,{children:"Matrix for view-to-world translation."}),"\n",(0,i.jsx)(r.h3,{id:"xrdevicecamera",children:"xrDeviceCamera?"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"/docs/api/classes/XRDeviceCamera",children:(0,i.jsx)(r.code,{children:"XRDeviceCamera"})})}),"\n",(0,i.jsx)(r.p,{children:"The device camera instance."}),"\n",(0,i.jsx)(r.h3,{id:"xrdepth",children:"xrDepth?"}),"\n",(0,i.jsx)(r.p,{children:"The SDK's Depth module."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"undefined"})," | ",(0,i.jsx)(r.a,{href:"/docs/api/classes/Depth",children:(0,i.jsx)(r.code,{children:"Depth"})})]}),"\n",(0,i.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"null"})," | ",(0,i.jsx)(r.a,{href:"https://threejs.org/docs/#api/en/math/Vector3",children:(0,i.jsx)(r.code,{children:"Vector3"})})]}),"\n",(0,i.jsx)(r.p,{children:"Vertex at (u, v) in world space."})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);