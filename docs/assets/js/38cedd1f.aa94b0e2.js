"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9515],{7087:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"api/type-aliases/IconViewOptions","title":"Type Alias: IconViewOptions","description":"IconViewOptions = TextViewOptions","source":"@site/docs/api/type-aliases/IconViewOptions.md","sourceDirName":"api/type-aliases","slug":"/api/type-aliases/IconViewOptions","permalink":"/docs/api/type-aliases/IconViewOptions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"IconButtonOptions","permalink":"/docs/api/type-aliases/IconButtonOptions"},"next":{"title":"ImageViewOptions","permalink":"/docs/api/type-aliases/ImageViewOptions"}}');var t=o(74848),s=o(28453);const c={},r="Type Alias: IconViewOptions",a={},p=[{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"type-alias-iconviewoptions",children:"Type Alias: IconViewOptions"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IconViewOptions"})," = ",(0,t.jsx)(n.a,{href:"/docs/api/type-aliases/TextViewOptions",children:(0,t.jsx)(n.code,{children:"TextViewOptions"})})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Defined in: ",(0,t.jsx)(n.a,{href:"https://github.com/google/xrblocks/blob/main/src/ui/components/IconView.ts#L19",children:"src/ui/components/IconView.ts:19"})]}),"\n",(0,t.jsxs)(n.p,{children:["A specialized ",(0,t.jsx)(n.code,{children:"TextView"})," component designed for conveniently\ndisplaying icons from the Google Material Icons font library."]}),"\n",(0,t.jsxs)(n.p,{children:["This class simplifies the process of creating an icon by pre-configuring the\n",(0,t.jsx)(n.code,{children:"font"})," property. To use it, you provide the codepoint or ligature for the\ndesired icon in the ",(0,t.jsx)(n.code,{children:"text"})," option."]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Creates a 'home' icon.\nconst homeIcon = new IconView({ text: 'home', fontSize: 0.1 });\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>r});var i=o(96540);const t={},s=i.createContext(t);function c(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);